#######################################################################
#                           Metadata files                            #
#######################################################################
metadata:
  runlib2samp_file: "rawdata/metadata/omniath_rl2s.tsv"
  sample_meta_file: "rawdata/metadata/omniath_all_accessions.tsv"
  setfile_glob: "rawdata/metadata/samplesets/*.txt"


#######################################################################
#                           Raw Fastq Data                            #
#######################################################################
# Paths to raw data. These should be consistent across all samples. Samples
# must have either an R1 and R2, or an interleaved (il) fastq file per run and
# library. Having both is an error. If you somehow end up with both, combine
# the R1 & R2 files and append them to the interleaved, then remove the
# original R1/R2 files.
raw_paths:
  r1_path: "data/rawreads/{run}/{lib}_R1.fastq.gz"
  r2_path: "data/rawreads/{run}/{lib}_R2.fastq.gz"
  il_path: "data/rawreads/{run}/{lib}_il.fastq.gz"


#######################################################################
#                          Reference Genomes                          #
#######################################################################
refs:
  TAIR10: {fasta: "data/references/araport-11/TAIR10_fixiupac.fa", gff: "data/references/araport-11/TAIR10_GFF3_genes_transposons.gff"}
  at6137: {fasta: "data/references/difflines_2021-10-07/at6137.scaffolds.bionano.final.fasta"}
  at6923: {fasta: "data/references/difflines_2021-10-07/at6923.scaffolds.bionano.final.fasta"}
  at6929: {fasta: "data/references/difflines_2021-10-07/at6929.scaffolds.bionano.final.fasta"}
  at7143: {fasta: "data/references/difflines_2021-10-07/at7143.scaffolds.bionano.final.fasta"}
  at8285: {fasta: "data/references/difflines_2021-10-07/at8285.scaffolds.bionano.final.fasta"}
  at9104: {fasta: "data/references/difflines_2021-10-07/at9104.scaffolds.bionano.final.fasta"}
  at9336: {fasta: "data/references/difflines_2021-10-07/at9336.scaffolds.bionano.final.fasta"}
  at9503: {fasta: "data/references/difflines_2021-10-07/at9503.scaffolds.bionano.final.fasta"}
  at9578: {fasta: "data/references/difflines_2021-10-07/at9578.scaffolds.bionano.final.fasta"}
  at9744: {fasta: "data/references/difflines_2021-10-07/at9744.scaffolds.bionano.final.fasta"}
  at9762: {fasta: "data/references/difflines_2021-10-07/at9762.scaffolds.bionano.final.fasta"}
  at9806: {fasta: "data/references/difflines_2021-10-07/at9806.scaffolds.bionano.final.fasta"}
  at9830: {fasta: "data/references/difflines_2021-10-07/at9830.scaffolds.bionano.final.fasta"}
  at9847: {fasta: "data/references/difflines_2021-10-07/at9847.scaffolds.bionano.final.fasta"}
  at9852: {fasta: "data/references/difflines_2021-10-07/at9852.scaffolds.bionano.final.fasta"}
  at9879: {fasta: "data/references/difflines_2021-10-07/at9879.scaffolds.bionano.final.fasta"}
  at9883: {fasta: "data/references/difflines_2021-10-07/at9883.scaffolds.bionano.final.fasta"}
  at9900: {fasta: "data/references/difflines_2021-10-07/at9900.scaffolds.bionano.final.fasta"}
  cdm0: {fasta: "data/references/Cdm-0/AT9943.fasta"}
  jiao_an1: {fasta: "data/references/Jiao2020/An-1.chr.all.v2.0.fasta", gff: "data/references/Jiao2020/An-1.protein-coding.genes.v2.5.2019-10-09.gff3"}
  jiao_c24: {fasta: "data/references/Jiao2020/C24.chr.all.v2.0.fasta", gff: "data/references/Jiao2020/C24.protein-coding.genes.v2.5.2019-10-09.gff3"}
  jiao_cvi: {fasta: "data/references/Jiao2020/Cvi.chr.all.v2.0.fasta", gff: "data/references/Jiao2020/Cvi.protein-coding.genes.v2.5.2019-10-09.gff3"}
  jiao_eri: {fasta: "data/references/Jiao2020/Eri.chr.all.v2.0.fasta", gff: "data/references/Jiao2020/Eri.protein-coding.genes.v2.5.2019-10-09.gff3"}
  jiao_kyo: {fasta: "data/references/Jiao2020/Kyo.chr.all.v2.0.fasta", gff: "data/references/Jiao2020/Kyo.protein-coding.genes.v2.5.2019-10-09.gff3"}
  jiao_ler: {fasta: "data/references/Jiao2020/Ler.chr.all.v2.0.fasta", gff: "data/references/Jiao2020/Ler.protein-coding.genes.v2.5.2019-10-09.gff3"}
  jiao_sha: {fasta: "data/references/Jiao2020/Sha.chr.all.v2.0.fasta", gff: "data/references/Jiao2020/Sha.protein-coding.genes.v2.5.2019-10-09.gff3"}
  


#######################################################################
#                               Read QC                               #
#######################################################################
qc:
  _DEFAULT_:
    # _DEFAULT_ describes the settings to use for all runs except those
    # specifically named below.
    #
    # The below settings match the NEB NextTera oligos.
    adapter1: CTGTCTCTTATACACATCTCCGAGCCCACGAGACNNNNNNNNATCTCGTATGCCGTCTTCTGCTTG
    adapter2: CTGTCTCTTATACACATCTGACGCTGCCGACGANNNNNNNNGTGTAGATCTCGGTGGTCGCCGTATCATT
    minqual: 20
    qualenc: 33
    maxqualval: 45
  # Example special run
  # some_run:
  #   # One can specify a different set of oligos like so for any runs run on a
  #   # different platform. NB, this must be done per-run, not per library.
  #   adapter1: CTGTCTCTTATACACATCTGACGCTGCCGACGANNNNNNNNGTGTAGATCTCGGTGGTCGCCGTATCATT
  #   adapter2: CTGTCTCTTATACACATCTCCGAGCCCACGAGACNNNNNNNNATCTCGTATGCCGTCTTCTGCTTG
  #   minqual: 25



#######################################################################
#                               Kraken                                #
#######################################################################
kraken:

  # A mapping of db_name -> download URL. DBs will be automatically downloaded.
  dburls:
    PlusPFP: "https://genome-idx.s3.amazonaws.com/kraken/k2_pluspfp_20210127.tar.gz"

  samplesets:
    all_samples:
      - PlusPFP
    Athaliana:
      - PlusPFP
    difflines:
      - PlusPFP


#######################################################################
#                               Multiqc                               #
#######################################################################
multiqc:

  # A mapping of sampleset: multiqc stage reports. Stages are:
  # - rawreads
  # - samplereads
  # - alignment
  #Athaliana:
  #  - rawreads
  #  - samplereads
  #  - bamstats
  #  - kraken
  difflines:
    - rawreads
    - samplereads
    - bamstats
    - kraken

#######################################################################
#                       Alignment to Reference                        #
#######################################################################
align:
  aligners:
    - bwa
  refs:
    - TAIR10
    - at6137
    - at6923
    - at6929
    - at7143
    - at8285
    - at9104
    - at9336
    - at9503
    - at9578
    - at9744
    - at9762
    - at9806
    - at9830
    - at9847
    - at9852
    - at9879
    - at9883
    - at9900
    - cdm0
    - jiao_an1
    - jiao_c24
    - jiao_cvi
    - jiao_eri
    - jiao_kyo
    - jiao_ler
    - jiao_sha
  samplesets:
    #- Athaliana
    - difflines
  ngm: # tool specific settings
    sensitivity: 0.5
  abra2:
    java_args: '-Xmx16G'
    extra_args:
      # one can supply extra arguments (e.g. --targets) to abra, per reference genome
      TAIR10: ""


#######################################################################
#                   Non-gatk-based Variant Calling                    #
#######################################################################
varcall:
  # Should bcftools concat allow overlaps while merging region files (generally
  # false, occasionally needed with freebayes)
  merge_allow_overlaps: True
  
  # Per-aligner minimum MAPQ thresholds for using a read.
  minmapq:
    bwa: 30  # bwa scores approximately follow a PHRED scale (-10*log10(p))
    ngm: 10  # NGM scores are bonkers, and don't follow a particularly clear scale. in practice ~10 seems appropriate

  # Minimum base quality to count *base* in pileup
  minbq: 20
  
  # Chunk size for parallisation across genome. Per variant caller as they take
  # have different runtime and memory requirements, and all need to fit in
  # ~12hours on a single job.
  chunksize:
    mpileup:   5000000
    freebayes: 1000000
    gatk-hc: 100000000

  # The main per-sample set configuration. Here we select which variant
  # callers, aligners, and reference genomes get used, and set some parameters
  # specific to each sample set.
  samplesets:
    # Athaliana:
    #   theta_prior: 0.01
    #   aligners:
    #     - bwa
    #   callers:
    #     - mpileup
    #   refs:
    #     - TAIR10
    #   filters:
    #     - default
    #   snpeff: False
    difflines:
      theta_prior: 0.01
      aligners:
        - bwa
      callers:
        - mpileup
        - freebayes
      refs:
        - TAIR10
        - at6137
        - at6923
        - at6929
        - at7143
        - at8285
        - at9104
        - at9336
        - at9503
        - at9578
        - at9744
        - at9762
        - at9806
        - at9830
        - at9847
        - at9852
        - at9879
        - at9883
        - at9900
      filters:
        - default
      snpeff: False


  # Filters. These are series of command line arguments to pass to bcftools
  # view. These filters apply while multiallelic variants have been decomposed
  # into multiple overlapping variant calls. This allows e.g. allele frequency
  # filters to be performed on a per-allele basis.
  filters:
    default: >
      -i 'QUAL >= 10 &&
          INFO/DP >= 5 &&
          INFO/AN >= 3'


#######################################################################
#                        Cluster Configuration                        #
#######################################################################
# Here one can set the resources each job will request from the cluster. 
cluster_resources:
  DEBUG: False
  # Must jobs requiring intenet be run on the head node? set to True for
  # clusters where no nodes have internet access, otherwise use a job to some
  # queue that has internet (via the jobsubmit script).
  internet_only_localrules: True
  defaults:
    mem_gb: 2
    time_min: 60
  max_values:
    mem_gb: 250
    time_min: 10080 # 1wk
    internet: 1
  rules:
    mergebam_samp:
      time_min: 720
    rawreads_il_fromil:
      time_min: 120
    rawreads_il_fromr1r2:
      time_min: 120
    read_count_librun_indiv:
      time_min: 120
    split_pairs:
      time_min: 2880
    bam_markdups_sort:
      time_min: 720
    samplefastqfile:
      time_min: 120
    kraken:
      mem_gb: 50
      threads: 16
      time_min: 120
    bwaidx:
      mem_gb: 10
      time_min: 120
    mpileup:
      mem_gb: 4
      time_min: 2880
    freebayes:
      mem_gb: 10
      time_min: 10080

